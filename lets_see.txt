from transformers import AutoTokenizer, AutoModelWithLMHead
from nltk import word_tokenize, pos_tag

def t5base(x):
    tokenizer = AutoTokenizer.from_pretrained('T5-base')
    model = AutoModelWithLMHead.from_pretrained('T5-base', return_dict=True)
    inputs = tokenizer.encode("summarize: " + x, return_tensors='pt', max_length=1024, truncation=True)
    output = model.generate(inputs, min_length=50, max_length=150, do_sample=False)
    summary = tokenizer.decode(output[0], skip_special_tokens=True)
    
    # Tokenize the summary and perform part-of-speech tagging
    words = word_tokenize(summary)
    pos_tags = pos_tag(words)

    # Function to capitalize words based on custom rules
    def capitalize_words(word, tag):
        # Custom capitalization rules
        if tag in ["NNP", "NNPS"] or word.lower() in ["inc"] or word.lower() in ["january", "february", "march", "april", "may", "june", "july", "august", "september", "october", "november", "december", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]:
            return word.capitalize()
        else:
            return word

    # Apply capitalization rules based on POS tags and custom rules
    capitalized_words = [capitalize_words(word, tag) for word, tag in zip(words, pos_tags)]
    return " ".join(capitalized_words)

# Example usage
input_text = "john smith is the ceo of apple inc. apple inc. is located in cupertino, california. january is a month. london is a city. microsoft is a company."
output = t5base(input_text)
print(output)
